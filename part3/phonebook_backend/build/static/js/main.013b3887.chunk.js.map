{"version":3,"sources":["components/Search.js","components/Form.js","components/Contact.js","components/Display.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Search","searchInput","searchParam","onChange","value","Form","addContact","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Contact","name","number","deleteContact","id","onClick","Display","persons","searchOutput","filter","person","toUpperCase","includes","map","key","baseUrl","axios","get","newObject","post","delete","put","Notification","successMessage","errorMessage","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setSearchParam","setSuccessMessage","setErrorMessage","useEffect","personsService","then","response","data","event","target","preventDefault","contactObject","some","contact","window","confirm","setTimeout","catch","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.013b3887.chunk.js","sourcesContent":["import React from 'react';\n\nconst Search = ({ searchInput, searchParam }) => {\n  return (\n    <div>\n      <h4>Search contact:<input onChange={searchInput} value={searchParam}/></h4>\n    </div>\n  )\n}\n\nexport default Search;","import React from 'react';\n\nconst Form = ({ addContact, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addContact}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange}/>\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Form;","import React from 'react';\n\nconst Contact = ({ name, number, deleteContact, id }) => {\n  return (\n    <li> { name } { number } <button onClick={deleteContact(id, name)}>Delete</button></li>\n  )\n}\n\nexport default Contact;","import React from 'react';\nimport Contact from './Contact';\n\nconst Display = ({ persons, searchParam, deleteContact }) => {\n\n  const searchOutput = persons.filter(person => person.name.toUpperCase().includes(searchParam.toUpperCase()))\n\n  return (\n    <ul>\n    {\n      searchOutput.map((person) => {\n        return (\n          <Contact key={person.name} name={person.name} number={person.number} deleteContact={deleteContact} id={person.id}/>\n        )\n      }) \n    }\n    </ul>\n    \n  )\n}\n\nexport default Display;","import axios from 'axios';\n\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst createContact = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst deleteContact = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst updateContact = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default { getAll, createContact, deleteContact, updateContact };","import React from 'react';\n\nconst Notification = ({ successMessage, errorMessage }) => {\n\n  const successStyle = {\n    color: 'green',\n    background: 'lighgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const errorStyle = {\n    color: 'red',\n    background: 'lighgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if(successMessage === null && errorMessage === null) {\n    return null\n  }\n\n  return (\n    <div className=\"success\" style={successMessage === null ? errorStyle : successStyle}>\n      {\n        successMessage === null ? errorMessage : successMessage\n      }\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport Form from './components/Form';\nimport Display from './components/Display';\nimport personsService from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n\tconst [searchParam, setSearchParam] = useState('');\n\tconst [successMessage, setSuccessMessage] = useState(null);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personsService.getAll().then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  //Event handlers for Name and Number changes in the input fields (saves these in state)\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\t\n\t//Delete person from database (prompt a confirmation)\n  const handleDelete = (id, name) => {\n\t\t\treturn () => {\n\t\t\t\tif (window.confirm(`Are you sure you want to delete the contact ${name}`)) {\n\t\t\t\t\tpersonsService\n\t\t\t\t\t.deleteContact(id)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tsetPersons(persons.filter(person => person.id !== id));\n\t\t\t\t\t\tsetNewName('');\n\t\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n  }\n\n\t//Add person to database\n  const addContact = event => {\n    event.preventDefault();\n    const contactObject = {\n      name: newName,\n      number: newNumber\n\t\t}\n\t\t//If a contact with same name exists -> update contact\n    if (persons.some(person => person.name === newName)) {\n\t\t\tconst contact = persons.filter(person => person.name === newName)\n\t\t\tif (window.confirm(`Number for contact ${newName} already exists. Do you want to replace?`))\n\t\t\tpersonsService\n\t\t\t\t.updateContact(contact[0].id, contactObject)\n\t\t\t\t.then(() => {\n\t\t\t\t\tpersonsService\n\t\t\t\t\t\t.getAll()\n\t\t\t\t\t\t.then(response => setPersons(response.data))\n\t\t\t\t\t\tsetNewName('');\n\t\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\t\tsetSuccessMessage(`Updated number for ${newName}`)\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetSuccessMessage(null)\n\t\t\t\t\t\t}, 3000)\n\t\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetErrorMessage(`${newName} was already deleted from the server.`);\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== contact[0].id));\n\t\t\t\t\tsetNewNumber('');\n\t\t\t\t\tsetNewName('');\n\t\t\t\t})\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 3000)\n\t\t//If a brand new contact -> add to persons db\n\t\t} else {\n\t\t\t\tsetPersons(persons.concat(contactObject));\n\t\t\t\tsetNewName('');\n\t\t\t\tsetNewNumber('');  \n\t\t\t\tpersonsService.createContact(contactObject);\n\t\t\t\tpersonsService\n\t\t\t\t\t.getAll()\n\t\t\t\t\t.then(response => {\n\t\t\t\t\tsetPersons(response.data)\n\t\t\t\t})\n\t\t\t \tsetSuccessMessage(`Added contact for ${newName}`)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t setSuccessMessage(null)\n\t\t\t\t}, 3000)\n\t\t\t}\n\t}\n\n\t//Event handler for setting the inputted text in state for Search input\n  const searchInput = (event) => {\n    setSearchParam(event.target.value)\n  }\n\n\n  return (\n    <div>\n\t\t\t<Notification \n\t\t\t\tsuccessMessage={successMessage} \n\t\t\t\terrorMessage={errorMessage}\n\t\t\t/>\n      <h1>Phonebook</h1>\n      <Search \n        searchParam={searchParam} \n        searchInput={searchInput}\n      />\n      <h2>Add new contact</h2>\n      <Form \n        addContact={addContact} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange} \n        newName={newName} \n        newNumber={newNumber} \n      />\n      <h2>Contacts</h2>\n      <Display \n        persons={persons}\n        searchParam={searchParam}\n\t\t\t\tdeleteContact={handleDelete}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}